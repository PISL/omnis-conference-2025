# when the email worker completes, execution comes here
# Do we deal with the post email issues here, or in the calling object?
# That is determined by the calling object putting a callback methd in icCompletionMethod by calling $setCompletionMethod.

# do not call this method else we go into terminal nose dive
If icCompletionMethod<>''&icCompletionMethod<>$cmethod().$name
	# the method can refer to irCallerParams
	If left(icCompletionMethod,1)='$'
		Do $cinst.[icCompletionMethod](pResults)
	Else
		Do method [icCompletionMethod] (pResults)
	End If
End If

# whether or not icCompletionMethod is called we always call
# the original class' $emailCompleted method (if the instance is still running).
# This will deal with any visual issues.

If irefCaller
	If irCallerParams.$colcount
		Do irefCaller.$emailCompleted(pResults,irCallerParams)
	Else
		Do irefCaller.$emailCompleted(pResults)
	End If
Else
	If pResults.errorCode ## non-zero is a failure
		If ibSaveOnError ## this will be kFalse if we have no DB connection
			# parse the error and report it but also enter the email contents into an asyncemail to the developers
			Calculate lcMessage as con("Attempting to send message: ",kCr,irEmailBody.text)
			Calculate lcMessage as con(lcMessage,kCr,kCr,"returned error:",pResults.errorInfo)
			If len(pResults.log)
				Do $LogError('EMAIL_OW3','LOG_CONTENTS',pResults.log)
				Calculate lcMessage as con(lcMessage,kCr,kCr,"see error log for detais: ")
			End If
			Do irefStartTask.$AppError(999000,lcMessage,'email worker failure on completed email')
		End If
		# Else If len(icCompletionMethod)
		# Do $cinst.[icCompletionMethod] ## the completion method will pick up its parameters from irCompletionParams
	End If
End If

Do $cinst.$close() ## our job is done here