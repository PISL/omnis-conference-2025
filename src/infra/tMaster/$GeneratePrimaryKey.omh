If $ctask.tlDatabases.DAM='WebService'
	# pass parameters to web service
	# $callService (pFieldReference, row(TableClassName, CurrentMethodName, p1,...,pn) ) ## result will be returned in pFieldReference, row() contains the parameters for the call
	Calculate ldtStart as #D
	Do $ctask.toWeb.$callInsert(lnSEQ,$cinst.irErrorSQL,row($cinst.$class().$name,$cmethod().$name,row(pDoNotReportTheseErrors,pcSchemaClassName),lnSEQ.$type,$cinst.ilRESTextensions))
	Calculate $cinst.inServiceMS as ddiff(kCentiSecond,ldtStart,#D)*10
	Calculate $cinst.inRESTserverMS as $ctask.toWeb.inServerTime
	Quit method irErrorSQL.ErrorText='No error has been reported'
End If

If pcSchemaClassName<>''
	# if there is an error in the schema class name (that can be prefixed with a library name) then $colcount will be 0
	Do lrTemp.$definefromsqlclass(pcSchemaClassName)
End If

Do $cinst.$ImmediateSession(loSession,loStatement) Returns lbImmediateSession
If lbImmediateSession
	Do $cinst.$SetSession(loSession,loStatement)
Else If not($cinst.ibGoodConnectionToDb)
	Quit method kFalse
End If

Begin statement
If pcSchemaClassName<>''&lrTemp.$colcount
	Sta:select nextval('[con(lrTemp.$servertablenames(),'_seq')]')  
Else
	Sta:select nextval('[con($cinst.$servertablenames(),'_seq')]')  
End If
End statement
Do $cinst.$executesqlandfetchinto(lnSEQ,pDoNotReportTheseErrors) Returns lbOK
If lbImmediateSession
	Do $cinst.$SetSession(#NULL,#NULL,kTrue)
End If

Calculate $cinst.[icPrimarykey] as lnSEQ
Quit method lnSEQ