If pcCoCode<>''
	# good
Else If $cinst.CO_ISO3<>''
	# good
Else
	Quit method kFalse
End If
If pnVhost>1
	# good
Else
	# convert console to myEcoCost
	Calculate pnVhost as 3
End If

If tlDatabases.DAM='WebService'
	# pass parameters to web service
	# $callService (pFieldReference, row(TableClassName, CurrentMethodName, p1,...,pn) ) ## result will be returned in pFieldReference, row() contains the parameters for the call
	Do toWeb.$callFetch($cinst,irErrorSQL,row($cinst.$class().$name,$cmethod().$name,row(pcCoCode,pnVhost),$cinst.$type,0,ilRESTextensions))
	If toWeb.irResponse.httpStatusCode=200
		# the result should be in this object ## however there may be a SQL error
		If irErrorSQL.NativeErrorText<>''
			Quit method kFalse
		End If
		Quit method kTrue
	Else
		Quit method kFalse
	End If
End If

Do lrClient.$definefromsqlclass('htcommon.sClient')
Do lrClientAttributes.$definefromsqlclass('htcommon.sClientAttributes')
Do lrRegUser.$definefromsqlclass('htcommon.sWebUsers')
Do lrRegUserAttributes.$definefromsqlclass('htcommon.sUserAttributes')

Do lrFetch.$cols.$add('sumShares',kInteger,k32bitint)
Do lrFetch.$cols.$add('countOrders',kInteger,k32bitint)

Do $cinst.$cols.$findname('sumSharesOrdered') Returns liColRef
If liColRef
	# column already added
Else
	Do $cinst.$cols.$add('sumSharesOrdered',kInteger,k32bitint)
End If
Do $cinst.$cols.$findname('countShareOrders') Returns liColRef
If liColRef
	# column already added
Else
	Do $cinst.$cols.$add('countShareOrders',kInteger,k32bitint)
End If

Do $cinst.$cols.$findname('sumIndicativeShares') Returns liColRef
If liColRef
	# column already added
Else
	Do $cinst.$cols.$add('sumIndicativeShares',kInteger,k32bitint)
End If
Do $cinst.$cols.$findname('countIndicativeOrders') Returns liColRef
If liColRef
	# column already added
Else
	Do $cinst.$cols.$add('countIndicativeOrders',kInteger,k32bitint)
End If

Do $cinst.$ImmediateSession(loSession,loStatement) Returns lbImmediateSession
If lbImmediateSession
	Do $cinst.$SetSession(loSession,loStatement)
Else If not(ibGoodConnectionToDb)
	Quit method kFalse
End If

Begin statement
Sta:select sum( cast(substring(CA_ATTRIBUTE, 1, ( position('M' in CA_ATTRIBUTE)-1 ) ) as integer ) ),    count(*)
Sta:from [$cinst.$servertablenames()]
Sta:join [lrRegUser.$servertablenames()] on WUS_COUNTRY = CO_ISO3
Sta:join [lrClient.$servertablenames] on CL_SEQ = WUS_CL_REF and CL_VHOST_NO = @[pnVhost]
Sta:join [lrClientAttributes.$servertablenames] on CA_CL_REF = CL_SEQ and CA_TYPE = 'SHARES' and CA_STATUS <='020'
If pcCoCode<>''
	Sta:where CO_ISO3 = @[pcCoCode]
Else
	Sta:where CO_ISO3 = @[$cinst.CO_ISO3]
End If
End statement
Do $cinst.$executesqlandfetch(lrFetch) Returns lbOK

Calculate $cinst.sumSharesOrdered as lrFetch.sumShares
Calculate $cinst.countShareOrders as lrFetch.countOrders
Do lrFetch.$clear()

Begin statement
Sta:select sum( cast(substring(RUA_ATTRIBUTE, 1, ( position('M' in RUA_ATTRIBUTE)-1 ) ) as integer ) ),    count(*)
Sta:from [$cinst.$servertablenames()]
Sta:join [lrRegUser.$servertablenames()] on WUS_COUNTRY = CO_ISO3 and WUS_VHOST_NO = @[pnVhost]
Sta:join [lrRegUserAttributes.$servertablenames] on RUA_WUS_REF = WUS_SEQ and RUA_TYPE = 'SHARES'
Sta:where CO_ISO3 = @[$cinst.CO_ISO3]
End statement
Do $cinst.$executesqlandfetch(lrFetch) Returns lbOK

Calculate $cinst.sumIndicativeShares as lrFetch.sumShares
Calculate $cinst.countIndicativeOrders as lrFetch.countOrders

If lbImmediateSession
	Do $cinst.$SetSession(#NULL,#NULL,kTrue)
End If

Quit method lbOK