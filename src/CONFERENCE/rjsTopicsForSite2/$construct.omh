# this form resides in CORE library at the moment and therefore is limited to user access only
# as CORE library is res;onsible for database access and security in general

# Enter your initialization code here
# trGroupOrg and tlConferences have been initialised in the task

Calculate irCompany as trGroupOrg

# get all URL options in single fetch and extract the VALUEs of interest
Do toValues.$initInherited('URL') Returns llUrlOptions
Do llUrlOptions.$search($ref.RFO_VALUE='EXIT',1,0,0,0) Returns lbFound
If lbFound
	If not(isclear(llUrlOptions.RFO_CHAR))
		Calculate icURLexit as llUrlOptions.RFO_CHAR
	End If
End If

#  exit/pre and post HTML for speaker images
Calculate icImageHtmlPre as "<div><img src=" ## default
Do llUrlOptions.$search($ref.RFO_VALUE='SPK_IMG_PRE',1,0,0,0) Returns lbFound
If lbFound
	If not(isclear(llUrlOptions.RFO_CHAR))
		Calculate icImageHtmlPre as llUrlOptions.RFO_CHAR
	End If
End If

Calculate icImageHtmlPost as "?w=1200&amp;ssl=1 </div>" ## default
Do llUrlOptions.$search($ref.RFO_VALUE='SPK_IMG_POST',1,0,0,0) Returns lbFound
If lbFound
	If not(isclear(llUrlOptions.RFO_CHAR))
		Calculate icImageHtmlPost as llUrlOptions.RFO_CHAR
	End If
End If

# Calculate ilConferences as tlOpenConferences
Do $defineList(ilConferences,'tConference')
Do ilConferences.$fetchLatest(3) ## future (current), previous, 2nd previous  Adds Venue info
Do ilConferences.$addDisplayName()
Do ilConferences.$sort($ref.CF_DATE_FROM,1) ## most recent at top of list

If ilConferences.$linecount>0
	Calculate ilConferences.$line as 0
	While $Loop(ilConferences)
		Do ilConferences.$DisplayName(4)
	End While
	
	# list of conferences could display a conference with no Arrangements (a future conference)
	# so identify conference with most desirable content
	Do ilConferences.$search($ref.countArrangements>5,1,0,0,0) Returns lbFound
	If not(lbFound)
		# we could use trCurrentConference to set default line
		Calculate ilConferences.$line as 1
	End If
End If

If ilConferences.$linecount>20
	Calculate ilCities as ilConferences
	Do ilCities.$cols.VEN_TOWN.$removeduplicates(kTrue)
	If ilCities.$linecount>10
		Calculate $cinst.$objs.PagedPane.$currentpage as 5 ## allows user to filter available conference choice by city
	End If
	Do ilCities.$cols.$findname('VEN_TOWN') Returns liColRef
	Calculate $cinst.$objs.ilCities.$listcolumn as liColRef.$ident
End If

Do ilConferences.$cols.$findname('DisplayName') Returns liColRef
If liColRef
	Calculate $cinst.$objs.ilConferences.$listcolumn as liColRef.$ident
End If


Do iTileList.$define()
Do iTileList.$cols.$add('ImagePath',kCharacter,kSimplechar)
Do iTileList.$cols.$add('Text1',kCharacter,kSimplechar)
Do iTileList.$cols.$add('Text2',kCharacter,kSimplechar)
Do iTileList.$cols.$add('ButtonPath',kCharacter,kSimplechar)
Do iTileList.$cols.$add('ButtonDescription',kCharacter,kSimplechar)
Do iTileList.$cols.$add('BackgroundColor',kInteger,k32bitint)
# Do iTileList.$add('ImagePath','Text1','Text2','ButtonPath','ButtonDescription','BackgroundColor')

Do $defineList(ilTopicsWithSpeakers,'tTopics')
Do method fetchTopics

Do method TranslateText

Calculate $cinst.$objs.label_SelectEvent.$visible as ilConferences.$linecount>1
Calculate $cinst.$objs.ilConferences.$visible as ilConferences.$linecount>1


# if we're developing, set the timeout to a reasonable value - 2 hours
If sys(2)=17
	Do $setTimeout(120)
End If
Do method setGridExceptions

Do $cinst.$behaviour()
Do $cinst.$redraw()