# this method manipulates the $line of the Persons list so take a local copy
Calculate llPersonsCopy as ilPersons
# count the full time education folk
If llPersonsCopy.$linecount>0
	# totc() only works when expression refers to a single column
	# e.g. totc(llPersonsCopy,inDG_OCCUPANCY=ikOccupancySponsored)  works ## wheras totc(llPersonsCopy,inDG_OCCUPANCY=ikOccupancySingle&inExtras=ikExtraAlone)  does not
	
	Calculate lnCountEducationFT as totc(llPersonsCopy,inDG_OCCUPANCY=ikOccupancySponsored)
	# there may be one person in the list and another waiting to be added to the list llPersonsCopy
	If irRegistration.PSN_EMAIL<>''&irRegistration.PSN_EMAIL<>llPersonsCopy.PSN_EMAIL
		Calculate lnCountEducationFT as lnCountEducationFT+(inDG_OCCUPANCY=ikOccupancySponsored)
	End If
Else If llPersonsCopy.$linecount=0
	Calculate lnCountEducationFT as inDG_OCCUPANCY=ikOccupancySponsored
End If

If lnCountEducationFT>0
	# now count the Single entries
	If llPersonsCopy.$linecount>0
		# cannot use totc when multiple columns are to be applied
		Do llPersonsCopy.$search($ref.inDG_OCCUPANCY=ikOccupancySingle&$ref.inExtras=ikExtraAlone,1,0,1,0)
		Calculate lnCountSingleAlone as tot(llPersonsCopy,#LSEL)
		Do llPersonsCopy.$search(0)
		# there may be one person in the list and another waiting to be added to the list llPersonsCopy
		If irRegistration.PSN_EMAIL<>''&irRegistration.PSN_EMAIL<>llPersonsCopy.PSN_EMAIL
			Calculate lnCountSingleAlone as lnCountSingleAlone+(inDG_OCCUPANCY=ikOccupancySingle&inExtras=ikExtraAlone)
		End If
	Else If llPersonsCopy.$linecount=0
		Calculate lnCountSingleAlone as inDG_OCCUPANCY=ikOccupancySingle
	End If
	
	Calculate lbFullTimeEducationValid as lnCountEducationFT=lnCountSingleAlone
Else
	Calculate lbFullTimeEducationValid as kTrue
End If

Quit method lbFullTimeEducationValid